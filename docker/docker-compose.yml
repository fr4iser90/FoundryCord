services:
  bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile.bot
    image: homelab-discord-bot:latest
    container_name: homelab-discord-bot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - ENABLED_SERVICES=${ENABLED_SERVICES:-Web,Game,File}
      - OFFLINE_MODE=${OFFLINE_MODE:-false}
      - SESSION_DURATION_HOURS=${SESSION_DURATION_HOURS:-24}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
      - RATE_LIMIT_MAX_ATTEMPTS=${RATE_LIMIT_MAX_ATTEMPTS:-5}
      - PUID=${PUID:-1001}
      - PGID=${PGID:-987}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M
    networks:
      - homelab-net
    dns:
      - 1.1.1.1
    volumes:
      - ../app/bot/:/app/bot/
      - ../../../vpn-management/wireguard/config/:/app/bot/database/wireguard
      - /var/run/docker.sock:/var/run/docker.sock
      - bot_config:/app/bot/config
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    image: homelab-discord-bot-web:latest
    container_name: homelab-web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
      - DISCORD_BOT_ID=${DISCORD_BOT_ID}
      - DISCORD_BOT_SECRET=${DISCORD_BOT_SECRET}
      - DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI:-http://localhost:8000/auth/callback}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - APP_DB_USER=${APP_DB_USER:-homelab_discord_bot}
      - APP_DB_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_HOST=postgres
    ports:
      - "8000:8000"
    volumes:
      - ../app/web:/app/web
      - ../app/bot:/app/bot
    networks:
      - homelab-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    container_name: homelab-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-homelab}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST:-homelab-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    command: ["postgres", "-c", "listen_addresses=*"]
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d homelab -c 'SELECT 1 FROM pg_database'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - homelab-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M

  redis:
    image: redis:alpine
    container_name: homelab-redis
    restart: unless-stopped
    networks:
      - homelab-net
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
          
networks:
  homelab-net:
    driver: bridge
  proxy:
    external: true

volumes:
  postgres_data:
    driver: local
  bot_config:
    driver: local
  bot_credentials:
    driver: local
  redis_data:
    driver: local 